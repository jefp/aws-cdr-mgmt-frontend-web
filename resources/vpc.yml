Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.254.254.128/25
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags: 
        - 
          Key: "Name"
          Value: ${self:service}-${self:custom.stage}-vpc
  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      VpcId: !Ref VPC
      CidrBlock: 172.254.254.128/27
      MapPublicIpOnLaunch: false
  SubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      VpcId: !Ref VPC
      CidrBlock: 172.254.254.160/27
      MapPublicIpOnLaunch: false
  SubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1c
      VpcId: !Ref VPC
      CidrBlock: 172.254.254.192/27
      MapPublicIpOnLaunch: false
  SubnetInternet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      VpcId: !Ref VPC
      CidrBlock: 172.254.254.224/27
      MapPublicIpOnLaunch: true
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  RouteTableInternet:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  RouteToNat:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref RouteTable
  RouteToInternet:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTableInternet
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Name
          Value: InternetGateway-cdr
  VPCIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 'EIP.AllocationId'
      SubnetId: !Ref SubnetInternet
  SubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetA
  SubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetB
  SubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetC
  SubnetInternetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableInternet
      SubnetId: !Ref SubnetInternet
  EndpointS3:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds: 
        - !Ref RouteTable
      ServiceName: "com.amazonaws.us-east-1.s3"
      VpcId: !Ref VPC
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 
              - s3:*
            Principal: "*"
            Resource: 
              - arn:aws:s3:::${self:service}-${self:custom.stage}-results/*
              - arn:aws:s3:::${self:service}-${self:custom.stage}-results
              - arn:aws:s3:::packages.*.amazonaws.com/*
              - arn:aws:s3:::repo.*.amazonaws.com/*
              - arn:aws:s3:::amazonlinux.*.amazonaws.com/*
  InstanceSecurityGroup:
    Properties:
      GroupDescription: No access
      VpcId:
        Ref: VPC
    Type: AWS::EC2::SecurityGroup