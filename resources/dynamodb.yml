Resources:
  JobsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      # Generate a name based on the stage
      TableName: ${self:custom.stage}-jobs-table
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      # Set the capacity based on the stage
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}
      StreamSpecification:
       StreamViewType: NEW_IMAGE
      GlobalSecondaryIndexes:
      - IndexName: IdIndex
        KeySchema:
        - AttributeName: id
          KeyType: HASH
        Projection:
          ProjectionType: KEYS_ONLY
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.tableThroughput}
          WriteCapacityUnits: ${self:custom.tableThroughput}
  ObjectRestoration:
    Type: AWS::DynamoDB::Table
    Properties:
      # Generate a name based on the stage
      TableName: ${self:custom.stage}-restoration-table
      AttributeDefinitions:
        - AttributeName: reqId
          AttributeType: S
        - AttributeName: reqId2
          AttributeType: S
      KeySchema:
        - AttributeName: reqId
          KeyType: HASH
        - AttributeName: reqId2
          KeyType: RANGE
      TimeToLiveSpecification: 
          AttributeName: ttl
          Enabled: true
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}
  JobsDetail:
    Type: AWS::DynamoDB::Table
    Properties:
      # Generate a name based on the stage
      TableName: ${self:custom.stage}-jobs-detail-table
      AttributeDefinitions:
        - AttributeName: jobId
          AttributeType: S
        - AttributeName: file
          AttributeType: S
      KeySchema:
        - AttributeName: jobId
          KeyType: HASH
        - AttributeName: file
          KeyType: RANGE
      # Set the capacity based on the stage
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}
  ConfigurationTable:
    Type: AWS::DynamoDB::Table
    Properties:
      # Generate a name based on the stage
      TableName: ${self:custom.stage}-config-table
      AttributeDefinitions:
        - AttributeName: Configuration
          AttributeType: S
      KeySchema:
        - AttributeName: Configuration
          KeyType: HASH
      # Set the capacity based on the stage
      ProvisionedThroughput:
        ReadCapacityUnits: ${self:custom.tableThroughput}
        WriteCapacityUnits: ${self:custom.tableThroughput}
